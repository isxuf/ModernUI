[
  {
    "Id": "1239644",
    "ThreadId": "543820",
    "Html": "Hi, I need some help.\r<br />\n<br />\nI'll try to write my own ContentLoader, because my Modules in other Assemblys.\r<br />\nThe other Assemblys not directly referenced in my Shell Project. They are loaded with Mef inside my ModuleDiscoveryService.<br />\n<pre><code>namespace Shell.Services\n{\n    //Not really using Mef here but inside my ModuleDiscoveryService and\n    //it works.\n    public class MefContentLoader : DefaultContentLoader\n    {\n        private IModuleDiscoveryService _moduleService;\n        private List&lt;IModuleMetadata&gt; _modules;\n\n        private IView _activeView;\n        private IModule _activeModule;\n\n        // Constructor is fireing, getting the Metadata works fine.\n        public MefContentLoader()\n        {\n            //Here I get my ModuleDiscoveryservice\n            //This service is just checking up my outputdirectory for\n            //any ModuleAssemblys\n            _moduleService = ServicePool\n            .Current\n            .GetService&lt;IModuleDiscoveryService&gt;();\n\n            //GetModulesMetadata return the Metadata.\n            this.Modules = _moduleService.GetModulesMetadata();\n        }\n\n        //Never fireing\n        protected override object LoadContent(Uri uri)\n        {\n            if (FirstFloor.ModernUI.ModernUIHelper.IsInDesignMode)\n                return null;\n\n            var module = (from m in this._modules\n                           where m.ContentUri == uri.OriginalString\n                           select m).FirstOrDefault();\n\n            if (module == null)\n            {\n                throw new ArgumentException(\n                 &quot;Sorry this uri was not found: &quot; + uri);\n            }\n\n            // unload old Module\n            if (this.ActiveModule != null)\n            {\n                this.ActiveModule.Close();\n            }\n\n            //load new Module\n            this.ActiveModule = _moduleService.ActivateModule(module);\n            this.ActiveView = this.ActiveModule.GetView();\n\n            return this.ActiveView;\n        }\n\n        // Some properties...\n        public List&lt;IModuleMetadata&gt; Modules\n        {\n            get { return _modules; }\n            set { _modules = value;}\n        }\n\n        public IView ActiveView\n        {\n            get { return _activeView; }\n            set { _activeView = value;}\n        }\n\n        public IModule ActiveModule\n        {\n            get { return _activeModule; }\n            set { _activeModule = value;}\n        }\n    }\n}</code></pre>\n\nI get a Navigation Failed, Rescource not found Exception.\r<br />\nUnderstandable, because ModernUI not using my override and try to find the given uri of a non referenced assembly.\r<br />\n<br />\nAny help is appreciated. Thanks a lot.<br />\n",
    "PostedDate": "2014-04-30T00:02:42.907-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1239663",
    "ThreadId": "543820",
    "Html": "Ok i got it, stupid error.\r<br />\n<br />\nI initialized the MefContentLoader inside the constructor of my application.\r<br />\nI've got to override the OnStartup method of my application. Now it works.<br />\n<pre><code>public App()\n{\n    // Bootstrap\n   Bootstrapper.InitializeServices();\n\n   //FAIL!!!\n   //MefContentLoader contentLoader = new MefContentLoader();\n   //this.Resources.Add(&quot;MefContentLoader&quot;, contentLoader);\n}\n\nprotected override void OnStartup(StartupEventArgs e)\n{\n     base.OnStartup(e);\n\n     MefContentLoader contentLoader = new MefContentLoader();\n     this.Resources.Add(&quot;MefContentLoader&quot;, contentLoader);\n}</code></pre>\n\n",
    "PostedDate": "2014-04-30T00:50:08.573-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-04-30T00:50:16.777-07:00"
  }
]