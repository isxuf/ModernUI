[
  {
    "Id": "1130575",
    "ThreadId": "471604",
    "Html": "Hi All,\r<br />\n<br />\nI've created a simple custom page based on a ModernUI Basic Page. On this page I have some controls e.g. ComboBox.\r<br />\nTo get the data for this control I have to execute a time intensive action that takes some seconds. Now I like to show the loading points (like a loading screen) or like in the DemoApp by the flickr example during this time...\r<br />\n<br />\nBut I could not find a good example to get this working.\r<br />\nMy Code I have so far is below this message. What I am doing wrong or is something missing?\r<br />\n<br />\n<strong>PageXML</strong>:<br />\n<pre><code>&lt;UserControl x:Class=&quot;SharePointManager.ChangeListItem&quot;\n             xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n             xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; \n             xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; \n             xmlns:mui=&quot;http://firstfloorsoftware.com/ModernUI&quot;\n             mc:Ignorable=&quot;d&quot; \n             d:DesignHeight=&quot;412&quot; d:DesignWidth=&quot;678&quot; Width=&quot;800&quot; Height=&quot;600&quot;&gt;\n    &lt;Grid Style=&quot;{StaticResource ContentRoot}&quot;&gt;\n        &lt;ScrollViewer&gt;\n            &lt;StackPanel MinWidth=&quot;200&quot;&gt;\n                &lt;TextBlock Text=&quot;Change List Item&quot; Style=&quot;{StaticResource Heading2}&quot; /&gt;\n            &lt;/StackPanel&gt;\n        &lt;/ScrollViewer&gt;\n        &lt;ComboBox x:Name=&quot;cboWebApplication&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;146,35,0,0&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;400&quot; ToolTip=&quot;Select WebApplication&quot;/&gt;\n        &lt;Label x:Name=&quot;lblWebApplication&quot; Content=&quot;WebApplication&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;20,35,0,0&quot; VerticalAlignment=&quot;Top&quot;/&gt;\n        &lt;Label x:Name=&quot;lblSiteCollection&quot; Content=&quot;SiteCollection&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;20,75,0,0&quot; VerticalAlignment=&quot;Top&quot;/&gt;\n        &lt;ComboBox x:Name=&quot;cboSiteCollection&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;146,75,0,0&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;400&quot; ToolTip=&quot;Select SiteCollection&quot;/&gt;\n        &lt;Label x:Name=&quot;lblList&quot; Content=&quot;List&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;20,115,0,0&quot; VerticalAlignment=&quot;Top&quot;/&gt;\n        &lt;ComboBox x:Name=&quot;cboList&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;146,115,0,0&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;250&quot; ToolTip=&quot;Select List&quot;/&gt;\n    &lt;/Grid&gt;\n&lt;/UserControl&gt;\n</code></pre>\n\n<strong>PageCode</strong>:<br />\n<pre><code> public partial class ChangeListItem : UserControl\n    {\n        public ChangeListItem()\n        {\n            InitializeComponent();\n\n            GetWebApp();\n        }\n\n        private async void GetWebApp()\n        {\n            SharePointLoader loader = new SharePointLoader();\n            await Task.Run(() =&gt; loader.GetWebApplications());\n        }\n    }</code></pre>\n\n<strong>CustomClass</strong>:<br />\n<pre><code>public class SharePointLoader : IContentLoader\n    {\n        public async Task&lt;LinkCollection&gt; GetWebApplications()\n        {\n            LinkCollection WebApplications = new LinkCollection();\n            await Task.Run(() =&gt; Thread.Sleep(10000));\n\n            MessageBox.Show(&quot;Test&quot;);\n\n            return WebApplications;\n        }\n\n        public async Task&lt;object&gt; LoadContentAsync(Uri uri, CancellationToken cancellationToken)\n        {\n            await Task.Run(() =&gt; Thread.Sleep(10000));\n            object test = new object();\n\n            return test;\n            //throw new NotImplementedException();\n        }\n    }</code></pre>\n\n",
    "PostedDate": "2013-11-30T17:20:15.933-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1137999",
    "ThreadId": "471604",
    "Html": "To do this, I cheated and made ModernFrame.IsLoadingContentPropertyKey public.  After you do this, add the following to your main window:\r<br />\n<br />\nModernFrame m_ModernFrame = null;\r<br />\n/// &lt;summary&gt;&lt;/summary&gt;\r<br />\npublic ModernFrame ModernFrame\r<br />\n{<br />\n<pre><code>get\n{\n    if (null == m_ModernFrame)\n    {\n        m_ModernFrame = GetTemplateChild(&quot;ContentFrame&quot;) as ModernFrame;\n    }\n    return m_ModernFrame;\n}</code></pre>\n\n}\r<br />\n<br />\n \r<br />\nNow you can call:\r<br />\n((MyMainWindw)MainWindow).ModernFrame.SetValue(ModernFrame.IsLoadingContentPropertyKey, true);((MyMainWindw)MainWindow).ModernFrame.SetValue(ModernFrame.IsLoadingContentPropertyKey, false);\r<br />\n<br />\nIt'd be nice if this were exposed in the library using a reference count maybe to handle multiple operations.<br />\n",
    "PostedDate": "2013-12-18T17:40:39.313-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1140269",
    "ThreadId": "471604",
    "Html": "Hi,<br />\n<br />\nWhat would be nice, is if the notion of a mui page life cycle could be explored, i.e 1) the page life cycle should keep state and allow the invocation of that state like mentioned above, 3) a mui bootstrapper and to specify a custome DI container, and custom MVVM framework to be used within the MUI template, 3) inject workflow with parameterization into it not just a hook, basically typical features like this, as my little UI work arounds are growing. <br />\n<br />\nRegards<br />\nPrakashZa<br />\n",
    "PostedDate": "2013-12-20T04:49:33.443-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]