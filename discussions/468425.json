[
  {
    "Id": "1122761",
    "ThreadId": "468425",
    "Html": "I have 2 pages (User and UserListing)\r<br />\nWhen I Add new user on <strong>User Page</strong> then change page to <strong>UserListing Page</strong> the ComboBoxUser on <strong>UserListing Page</strong> wont update automatically. Any Idea to solve this ?\r<br />\n<br />\nthis is my code\r<br />\nUser.cs<br />\n<pre><code>    public class User : INotifyPropertyChanged\n    {\n        string _firstName;\n        public string FirstName {\n            get { return _firstName; }\n            set { \n                _firstName = value;\n                OnPropertyChanged(&quot;FirstName&quot;);\n                OnPropertyChanged(&quot;FullName&quot;);\n            }\n        }\n        \n        string _lastName;\n        public string LastName {\n            get { return _lastName; }\n            set { \n                _lastName = value;\n                OnPropertyChanged(&quot;LastName&quot;);\n                OnPropertyChanged(&quot;FullName&quot;);\n            }\n        }\n\n        public string FullName\n        {\n            get { return string.Format(&quot;{0} {1}&quot;, FirstName, LastName); }\n        }\n\n        int _gender;\n        public int Gender {\n            get { return _gender; }\n            set { \n                _gender = value;\n                OnPropertyChanged(&quot;Gender&quot;);\n            }\n        }\n\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        protected void OnPropertyChanged(string name)\n        {\n            PropertyChangedEventHandler handler = PropertyChanged;\n            if (handler != null)\n            {\n                handler(this, new PropertyChangedEventArgs(name));\n            }\n        }\n    }</code></pre>\n\nUserListingViewModel.cs<br />\n<pre><code>    public class UserListingViewModel : INotifyPropertyChanged\n    {\n        public UserListingViewModel()\n        {\n            LoadDataUser();\n        }\n\n        public void LoadDataUser()\n        {\n            ComboUserData = new ObservableCollection&lt;User&gt;();\n\n            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings[\n                &quot;dLondre.Properties.Settings.CSLONDRE&quot;].ConnectionString);\n\n            string str = &quot;&quot;;\n            str += &quot;SELECT userid,firstname + ' ' + lastname as name FROM [user] &quot;;\n\n            SqlCommand com = con.CreateCommand();\n            com.CommandText = str;\n\n            try\n            {\n                con.Open();\n                SqlDataReader sdr = com.ExecuteReader();\n                while (sdr.Read())\n                {\n                    ComboUserData.Add(new User { UserID = (string)sdr[&quot;userid&quot;], FirstName = (string)sdr[&quot;name&quot;]});\n                }\n\n                com.Dispose();\n                con.Close();\n                con.Dispose();\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e);\n            }\n        }\n\n        \n        ObservableCollection&lt;User&gt; _comboUserData;\n        public ObservableCollection&lt;User&gt; ComboUserData\n        {\n            get\n            {\n                if (_comboUserData == null)\n                    _comboUserData = new ObservableCollection&lt;User&gt;();\n                return _comboUserData;\n            }\n            set\n            {\n                if (value != _comboUserData)\n                    _comboUserData = value;\n                OnPropertyChanged(&quot;ComboUserData&quot;);\n            }\n        }\n\n        User _user;\n        public User SelectedUserID\n        {\n            get { return _user; }\n            set\n            {\n                _user = value;\n                OnPropertyChanged(&quot;SelectedUserID&quot;);\n            }\n        }\n    }\n</code></pre>\n\nXAML<br />\n<pre><code>&lt;ComboBox x:Name=&quot;DDUserId&quot; \n         Width=&quot;140&quot; \n          DisplayMemberPath=&quot;FirstName&quot; \n          IsSynchronizedWithCurrentItem=&quot;True&quot; \n          ItemsSource=&quot;{Binding ComboUserData, Mode=TwoWay}&quot; \n          SelectedItem=&quot;{Binding SelectedUserID}&quot;&gt;\n&lt;/ComboBox&gt;</code></pre>\n\nMain Window XAML<br />\n<pre><code>&lt;mui:LinkGroup DisplayName=&quot;welcome&quot;&gt;\n            &lt;mui:LinkGroup.Links&gt;\n                &lt;mui:Link DisplayName=&quot;Login&quot; Source=&quot;/Views/Login.xaml&quot; /&gt;\n                &lt;mui:Link DisplayName=&quot;Register User&quot; Source=&quot;/Views/UserView.xaml&quot; /&gt;\n                &lt;mui:Link DisplayName=&quot;Manage Group&quot; Source=&quot;/Views/UserGroupView.xaml&quot; /&gt;\n                &lt;mui:Link DisplayName=&quot;List User&quot; Source=&quot;/Views/UserListingView.xaml&quot; /&gt;\n            &lt;/mui:LinkGroup.Links&gt;\n&lt;/mui:LinkGroup&gt;</code></pre>\n\n",
    "PostedDate": "2013-11-12T23:43:11.187-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]