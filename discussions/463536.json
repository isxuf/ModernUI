[
  {
    "Id": "1111997",
    "ThreadId": "463536",
    "Html": "Hi<br />\nJust want to give a litle contribution for extend M:Ui and themes and allow to load and use an external theme.<br />\n<br />\nSo lets go.<br />\n<br />\nWe will need a new class called as &quot;Theme&quot; for register the theme name and the theme url.<br />\n<br />\n<strong>FirstFloor.ModernUI.Windows.Theme.cs</strong><br />\n<pre><code>namespace FirstFloor.ModernUI.Windows\n{\n    public class Theme\n    {\n        public string ThemeUrl { get; set; }\n        public string ThemeName { get; set; }\n    }\n}</code></pre>\n\nAnd an Interface called as &quot;ITheme&quot;<br />\n<br />\n<strong>FirstFloor.ModernUI.Windows.ITheme.cs</strong><br />\n<pre><code>namespace FirstFloor.ModernUI.Windows\n{\n    public interface ITheme\n    {\n        string RegisterThemeUrl();\n\n        string RegisterThemeName();\n    }\n}</code></pre>\n\nOk so, now we have to modify a bit our &quot;AppearanceManager&quot; and load external assembly.<br />\n<br />\n<strong>FirstFloor.ModernUI.Presentation.AppearanceManager.cs</strong><br />\n<pre><code>        private readonly List&lt;Theme&gt; extTheme = new List&lt;Theme&gt;();\n\n        public void LoadThemes(string folder)\n        {\n            foreach(string file in Directory.EnumerateFiles(folder, &quot;*.dll&quot;))\n            {\n                Assembly.LoadFrom(file);\n                foreach(Assembly a in AppDomain.CurrentDomain.GetAssemblies())\n                {\n                    foreach(Type t in a.GetTypes())\n                    {\n                        if(t.GetInterface(&quot;ITheme&quot;) != null)\n                        {\n                            try\n                            {\n                                var instance = Activator.CreateInstance(t) as ITheme;\n                                var url = instance.RegisterThemeUrl();\n                                var name = instance.RegisterThemeName();\n\n                                var theme = new Theme {ThemeName = name, ThemeUrl = url};\n\n                                if(extTheme.Find(i =&gt; i.ThemeName == theme.ThemeName) == null)\n                                {\n                                    extTheme.Add(theme);\n                                }\n                            }\n                            catch(Exception ex)\n                            {\n                                Console.WriteLine(&quot;Exception on loading assembly : {0}&quot;, ex.Message);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        public List&lt;Theme&gt; ExternalTheme()\n        {\n            return extTheme;\n        }</code></pre>\n\nFirstFloor.ModernUI can now load assembly and register a theme.<br />\nYeah its good but how can we use it ?<br />\nIts very simple, in fisrt we have to load assemblies from a specific folder.<br />\n<br />\nSo in your project edit your <strong>App.xaml.cs</strong><br />\n<pre><code>        protected override void OnStartup(StartupEventArgs e)\n        {\n            AppearanceManager.Current.LoadThemes(&quot;YourThemeFolder&quot;);\n            base.OnStartup(e);\n        }</code></pre>\n\nAnd populate our combobox with the new theme<br />\n<br />\nEdit your <strong>SettingsAppearanceViewModel.cs</strong> and add this code in contructor<br />\n<pre><code>            var extSource = AppearanceManager.Current.ExternalTheme();\n            foreach(var theme in extSource)\n            {\n                themes.Add(new Link {DisplayName = theme.ThemeName, Source = new Uri(theme.ThemeUrl, UriKind.Relative)});\n            }</code></pre>\n\nIts ok, we have now a simple loader for an extenal theme and we can use it.<br />\nWe have to create an assembly with the theme.<br />\n<br />\nSo, lets go again ...<br />\n1/ create a new assembly project<br />\n2/ add needed references (FirstFloor.ModernUI too)<br />\n3/ Create a class and inherited this one from ITheme like<br />\n<pre><code>    public class HelloKittyTheme : ITheme\n    {\n        public string RegisterThemeUrl()\n        {\n            var assName = Assembly.GetExecutingAssembly().FullName.Split(',')[0].Trim();\n            var url = string.Format(@&quot;/{0};component/Assets/ModernUI.HelloKitty.xaml&quot;, assName);\n            return url;\n        }\n\n        public string RegisterThemeName()\n        {\n            return &quot;HelloKitty&quot;;\n        }\n    }</code></pre>\n\n4/ Create a folder /Assets<br />\n5/ Put your ModernUI.HelloKitty.xaml inside<br />\n<pre><code>&lt;ResourceDictionary xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n                    xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;&gt;\n\n    &lt;ResourceDictionary.MergedDictionaries&gt;\n        &lt;ResourceDictionary Source=&quot;/FirstFloor.ModernUI;component/Assets/ModernUI.Light.xaml&quot; /&gt;\n    &lt;/ResourceDictionary.MergedDictionaries&gt;\n\n    &lt;Color x:Key=&quot;AccentColor&quot;&gt;#f472d0&lt;/Color&gt;\n\n    &lt;Rectangle x:Key=&quot;WindowBackgroundContent&quot; x:Shared=&quot;false&quot; Margin=&quot;32&quot;&gt;\n        &lt;Rectangle.Fill&gt;\n            &lt;ImageBrush Opacity=&quot;.1&quot; ImageSource=&quot;/AssemblyName;component/Assets/background.kitty.png&quot; Stretch=&quot;None&quot;  AlignmentX=&quot;Right&quot; AlignmentY=&quot;Bottom&quot; /&gt;\n        &lt;/Rectangle.Fill&gt;\n    &lt;/Rectangle&gt;\n\n&lt;/ResourceDictionary&gt;</code></pre>\n\n6/ If your theme contain a picture put it in the same folder(Do not forget to change the build action on your picture =&gt; right click on picture =&gt; build action =&gt; change it to &quot;Resource&quot;)<br />\n7/ Compil and put your assembly file in your theme folder.<br />\n<br />\nAll its done.<br />\nThis is a simple code and can be improved, but its a good start for allow your Application users to create a theme without knowledge <br />\n",
    "PostedDate": "2013-10-25T02:02:20.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]