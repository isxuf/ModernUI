[
  {
    "Id": "1036713",
    "ThreadId": "441838",
    "Html": "Hi,\r<br />\n<br />\nI discovered ModernUI a few days ago and I must say it is really amazing, especially compared to what other similar projects have to offer.\r<br />\n<br />\nAnyway, I have this application where I need to execute a command using a BBCode link with a parameter. So I have read this page which explains the XAML part very well: <a href=\"https://mui.codeplex.com/wikipage?title=Link%20navigation%20with%20BBCodeBlock&amp;referringTitle=Documentation\" rel=\"nofollow\">https://mui.codeplex.com/wikipage?title=Link%20navigation%20with%20BBCodeBlock&referringTitle=Documentation</a>\r<br />\n<br />\nI understand I am supposed to use this:<br />\n<pre><code>&lt;mui:BBCodeBlock BBCode=&quot;[url=cmd://mycommand|my%20parameter]execute my command[/url]&quot; /&gt;</code></pre>\n\n... But unfortunately I'm still a little new to C# and I don't feel very comfortable with interfaces yet, I really do not know how to implement &quot;mycommand&quot; in my application :(\r<br />\n<br />\nCan you please help me out with this? I've been struggling all morning to find how to do it..\r<br />\n<br />\nThanks in advance!<br />\n",
    "PostedDate": "2013-04-28T04:56:26.65-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1036724",
    "ThreadId": "441838",
    "Html": "There are two steps required, step 1) implement your command and step 2) register the command with the BBCodeBlock link navigator.<br />\n<br />\nThere are various way to implement an <code>ICommand</code>. One option is to implement your command as stand-alone class. Deriving from <code>CommandBase</code>, an abstract base implementation of <code>ICommand</code>, located in the <code>FirstFloor.ModernUI.Presentation</code> namespace.<br />\n<pre><code>public class MyCommand : CommandBase\n{\n  protected override void OnExecute(object parameter)\n  {\n    // TODO: implement command execution\n  }\n}</code></pre>\n\nOr more commonly used, implement a command as part of your view model and use <code>RelayCommand</code> to relay command execution by invoking delegates. Both <code>NotifyPropertyChanged</code> and <code>RelayCommand</code> classes are also located in the <code>FirstFloor.ModernUI.Presentation</code> namespace.<br />\n<pre><code>public class MyViewModel : NotifyPropertyChanged\n{\n  public MyViewModel()\n  {\n    this.MyCommand = new RelayCommand(o =&gt; DoSomething(o));\n  }\n\n  private void DoSomething(object o)\n  {\n    // TODO: implement command execution\n  }\n\n  public RelayCommand MyCommand {get; private set;}\n}</code></pre>\n\nNext you need to register your command with the BBCodeBlock link navigator and provide a uri which identifies the command. <br />\n<br />\nWhen using a command as stand-alone class, you can instantiate the command in XAML. The x:Key uniquely identifies the command so it can be used in BBCode. The xml prefix <code>local</code> should map to the namespace where your command is located.<br />\n<pre><code>&lt;mui:BBCodeBlock&gt;\n  &lt;mui:BBCodeBlock.LinkNavigator&gt;\n    &lt;mui:DefaultLinkNavigator&gt;\n      &lt;mui:DefaultLinkNavigator.Commands&gt;\n        &lt;local:MyCommand x:Key=&quot;cmd://mycommand&quot; /&gt;\n      &lt;/mui:DefaultLinkNavigator.Commands\n    &lt;/mui:DefaultLinkNavigator&gt;\n  &lt;/mui:BBCodeBlock.LinkNavigator&gt;\n&lt;/mui:BBCodeBlock</code></pre>\n\nWhen your command is part of a view model, you'll need to register your command in code. The following view model defines a link navigator property and registers the command.<br />\n<pre><code>public class MyViewModel : NotifyPropertyChanged\n{\n  public MyViewModel()\n  {\n    this.MyCommand = new RelayCommand(o =&gt; DoSomething(o));\n    this.LinkNavigator = new DefaultLinkNavigator();\n    this.LinkNavigator.Commands.Add(\n      new Uri(&quot;cmd://mycommand&quot;, UriKind.Absolute), this.MyCommand);\n  }\n\n  private void DoSomething(object o)\n  {\n    // TODO: implement command execution\n  }\n\n  public RelayCommand MyCommand {get; private set;}\n  public ILinkNavigator LinkNavigator {get; private set;}\n}</code></pre>\n\nThen in XAML your bind the link navigator to the BBCodeBlock (assuming the viewmodel is set as datacontext):<br />\n<pre><code>&lt;mui:BBCodeBlock LinkNavigator=&quot;{Binding LinkNavigator}&quot; /&gt;</code></pre>\n\nTwo final remarks:<br />\nYour command is now registered to a single BBCodeBlock instance. You may want to re-use the link navigator not just for one, but for all BBCodeBlocks in your app. For that you need to define an implicit BBCodeBlock style in App.xaml. See also the Navigation.xaml page in the source code of the mui demo app,<br />\n<br />\nAnd second; command implementation and registration is even easier when you use MEF. See <a href=\"https://mui.codeplex.com/wikipage?title=A%20guide%20to%20using%20MEF\" rel=\"nofollow\">this document page</a> for more details on using MEF, the included source code provide an exportable command link navigator.<br />\n",
    "PostedDate": "2013-04-28T05:36:58.457-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1036779",
    "ThreadId": "441838",
    "Html": "Thank you ! This really helped me out a lot :)<br />\n",
    "PostedDate": "2013-04-28T10:01:57.18-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]