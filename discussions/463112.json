[
  {
    "Id": "1110499",
    "ThreadId": "463112",
    "Html": "I need a toggle button so I made a simple one in VB:\r<br />\n<br />\nModernToggleButton.vb:<br />\n<pre><code>Imports FirstFloor.ModernUI.Windows.Controls\nImports System.ComponentModel\n\n\nPublic Class ModernToggleButton\n    Inherits ModernButton\n    Implements INotifyPropertyChanged\n\n    Public Event PropertyChanged(sender As Object, e As PropertyChangedEventArgs) Implements INotifyPropertyChanged.PropertyChanged\n\n    Public Sub New()\n        MyBase.New()\n        Try\n            ' load the ModernToggleButton Style Resource from the current control library\n            Dim resourceDictionary = New ResourceDictionary()\n            resourceDictionary.Source = New Uri(&quot;MyControlLib;component/Controls/ModernToggleButton.Style.xaml&quot;, UriKind.Relative)\n            Me.Resources.MergedDictionaries.Add(resourceDictionary)\n\n        Catch ex As Exception\n            Throw New Exception(&quot;Failed to find resource for ModernToggleButton&quot;)\n        End Try\n    End Sub\n\n\n    ''' &lt;summary&gt;\n    ''' IsChecked Property\n    ''' &lt;/summary&gt;\n    ''' \n    Public Shared IsCheckedProperty As DependencyProperty = DependencyProperty.Register(&quot;IsChecked&quot;, GetType(Boolean), GetType(ModernToggleButton), New PropertyMetadata(False))\n\n    Public Property IsChecked As Boolean\n        Get\n            Return DirectCast(GetValue(IsCheckedProperty), Boolean)\n        End Get\n        Set(value As Boolean)\n            SetValue(IsCheckedProperty, value)\n            RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(&quot;IsChecked&quot;))\n        End Set\n    End Property\n\n    Public Sub ToggleButton_Click(sender As Object, e As RoutedEventArgs) Handles Me.Click\n        IsChecked = Not IsChecked\n    End Sub\n\nEnd Class\n</code></pre>\n\nModernToggleButton.Style.xaml<br />\n<pre><code>&lt;ResourceDictionary xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n                    xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n                    xmlns:mui=&quot;http://firstfloorsoftware.com/ModernUI&quot;\n                    xmlns:local=&quot;clr-namespace:MyControlLib&quot;&gt;\n\n    &lt;Style TargetType=&quot;{x:Type local:ModernToggleButton}&quot; BasedOn=&quot;{StaticResource {x:Type mui:ModernButton}}&quot;&gt;\n            &lt;Setter Property=&quot;Template&quot;&gt;\n                &lt;Setter.Value&gt;\n                    &lt;ControlTemplate TargetType=&quot;local:ModernToggleButton&quot;&gt;\n                        &lt;Grid x:Name=&quot;grid&quot;\n                          Margin=&quot;{TemplateBinding Padding}&quot;\n                          Background=&quot;Transparent&quot;&gt;\n                            &lt;Grid.ColumnDefinitions&gt;\n                                &lt;ColumnDefinition Width=&quot;Auto&quot; /&gt;\n                                &lt;ColumnDefinition /&gt;\n                            &lt;/Grid.ColumnDefinitions&gt;\n\n                            &lt;Grid Width=&quot;{TemplateBinding EllipseDiameter}&quot; Height=&quot;{TemplateBinding EllipseDiameter}&quot;&gt;\n                                &lt;Ellipse x:Name=&quot;ellipse&quot;\n                                     VerticalAlignment=&quot;Stretch&quot;\n                                     Stroke=&quot;{DynamicResource ModernButtonBorder}&quot;\n                                     StrokeThickness=&quot;{TemplateBinding EllipseStrokeThickness}&quot; /&gt;\n                                &lt;Path x:Name=&quot;icon&quot;\n                                  Width=&quot;{TemplateBinding IconWidth}&quot;\n                                  Height=&quot;{TemplateBinding IconHeight}&quot;\n                                  HorizontalAlignment=&quot;Center&quot;\n                                  VerticalAlignment=&quot;Center&quot;\n                                  Data=&quot;{TemplateBinding IconData}&quot;\n                                  Fill=&quot;{TemplateBinding Foreground}&quot;\n                                  Stretch=&quot;Uniform&quot; /&gt;\n                            &lt;/Grid&gt;\n                            &lt;Grid Grid.Column=&quot;1&quot;&gt;\n                                &lt;TextBlock Margin=&quot;4,-1,0,0&quot;\n                                       VerticalAlignment=&quot;{TemplateBinding VerticalContentAlignment}&quot;\n                                       DataContext=&quot;{TemplateBinding Content}&quot;\n                                       Foreground=&quot;{TemplateBinding Foreground}&quot;\n                                       Text=&quot;{Binding Converter={StaticResource ToLowerConverter}}&quot;\n                                       TextTrimming=&quot;CharacterEllipsis&quot;\n                                       Visibility=&quot;{Binding Converter={StaticResource NullOrEmptyStringToVisibilityConverter},\n                                                            ConverterParameter=inverse}&quot; /&gt;\n                            &lt;/Grid&gt;\n                        &lt;/Grid&gt;\n                        &lt;ControlTemplate.Triggers&gt;\n                            &lt;Trigger Property=&quot;IsMouseOver&quot; Value=&quot;True&quot;&gt;\n                                &lt;Setter Property=&quot;Foreground&quot; Value=&quot;{DynamicResource ModernButtonTextHover}&quot; /&gt;\n                                &lt;Setter TargetName=&quot;ellipse&quot; Property=&quot;Stroke&quot; Value=&quot;{DynamicResource ModernButtonBorderHover}&quot; /&gt;\n                            &lt;/Trigger&gt;\n                            &lt;Trigger Property=&quot;IsPressed&quot; Value=&quot;True&quot;&gt;\n                                &lt;Setter Property=&quot;Foreground&quot; Value=&quot;{DynamicResource ModernButtonTextPressed}&quot; /&gt;\n                                &lt;Setter TargetName=&quot;ellipse&quot; Property=&quot;Stroke&quot; Value=&quot;{DynamicResource ModernButtonBorderPressed}&quot; /&gt;\n                                &lt;Setter TargetName=&quot;ellipse&quot; Property=&quot;Fill&quot; Value=&quot;{DynamicResource ModernButtonIconBackgroundPressed}&quot; /&gt;\n                                &lt;Setter TargetName=&quot;icon&quot; Property=&quot;Fill&quot; Value=&quot;{DynamicResource ModernButtonIconForegroundPressed}&quot; /&gt;\n                            &lt;/Trigger&gt;\n                            &lt;Trigger Property=&quot;IsChecked&quot; Value=&quot;True&quot;&gt;\n                                &lt;Setter Property=&quot;Foreground&quot; Value=&quot;{DynamicResource ModernButtonTextPressed}&quot; /&gt;\n                                &lt;Setter TargetName=&quot;ellipse&quot; Property=&quot;Stroke&quot; Value=&quot;{DynamicResource ModernButtonBorderPressed}&quot; /&gt;\n                                &lt;Setter TargetName=&quot;ellipse&quot; Property=&quot;Fill&quot; Value=&quot;{DynamicResource ModernButtonIconBackgroundPressed}&quot; /&gt;\n                                &lt;Setter TargetName=&quot;icon&quot; Property=&quot;Fill&quot; Value=&quot;{DynamicResource ModernButtonIconForegroundPressed}&quot; /&gt;\n                            &lt;/Trigger&gt;\n                            &lt;Trigger Property=&quot;IsEnabled&quot; Value=&quot;false&quot;&gt;\n                                &lt;Setter Property=&quot;Foreground&quot; Value=&quot;{DynamicResource ModernButtonTextDisabled}&quot; /&gt;\n                                &lt;Setter TargetName=&quot;ellipse&quot; Property=&quot;Stroke&quot; Value=&quot;{DynamicResource ModernButtonBorderDisabled}&quot; /&gt;\n                            &lt;/Trigger&gt;\n                            &lt;Trigger Property=&quot;IsFocused&quot; Value=&quot;true&quot;&gt;\n                                &lt;Setter TargetName=&quot;ellipse&quot; Property=&quot;Stroke&quot; Value=&quot;{DynamicResource Accent}&quot; /&gt;\n                            &lt;/Trigger&gt;\n                        &lt;/ControlTemplate.Triggers&gt;\n                    &lt;/ControlTemplate&gt;\n                &lt;/Setter.Value&gt;\n            &lt;/Setter&gt;\n        &lt;/Style&gt;\n&lt;/ResourceDictionary&gt;</code></pre>\n\n",
    "PostedDate": "2013-10-22T05:15:40.36-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1121042",
    "ThreadId": "463112",
    "Html": "Tried without success. I created class library project and add these 2 files. added reference to modernui lib. no dice.\r<br />\n<br />\nthanks.<br />\n",
    "PostedDate": "2013-11-10T09:14:13.413-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1121089",
    "ThreadId": "463112",
    "Html": "Did you change the name of the class library and the path of the ModernToggleButton.Style.xaml?\r<br />\n<br />\nIn XAML:\r<br />\nChange this\r<br />\nxmlns:local=&quot;clr-namespace:<strong>MyControlLib</strong>&quot;\r<br />\nTo\r<br />\nxmlns:local=&quot;clr-namespace:<strong>YourClassLibName</strong>&quot;\r<br />\n<br />\nIn VB:\r<br />\nChange this\r<br />\nresourceDictionary.Source = New Uri(&quot;<strong>MyControlLib</strong>;component/<strong>Controls</strong>/ModernToggleButton.Style.xaml&quot;, UriKind.Relative)\r<br />\nTo\r<br />\nresourceDictionary.Source = New Uri(&quot;<strong>YourClassLibName</strong>;component/<strong>PathInYourClassLib</strong>/ModernToggleButton.Style.xaml&quot;, UriKind.Relative)<br />\n",
    "PostedDate": "2013-11-10T10:00:33.473-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1286892",
    "ThreadId": "463112",
    "Html": "I also needed a toggle button an easy solution was to create a custom style with a trigger:<br />\n<pre><code> &lt;Style x:Key=&quot;DaToggle&quot; TargetType=&quot;ToggleButton&quot; BasedOn=&quot;{StaticResource {x:Type ToggleButton}}&quot;&gt;\n                &lt;Style.Triggers&gt;\n                    &lt;Trigger Property=&quot;IsChecked&quot; Value=&quot;true&quot;&gt;\n                        &lt;Setter Property=&quot;Button.Background&quot; Value=&quot;Aqua&quot;&gt;&lt;/Setter&gt;\n                    &lt;/Trigger&gt;\n                &lt;/Style.Triggers&gt;\n            &lt;/Style&gt;</code></pre>\n\n",
    "PostedDate": "2014-08-06T02:43:15.763-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1345590",
    "ThreadId": "463112",
    "Html": "Look at my post at the end of <a href=\"https://mui.codeplex.com/discussions/442290\" rel=\"nofollow\">https://mui.codeplex.com/discussions/442290</a>  There is the templated solution.<br />\n",
    "PostedDate": "2015-01-25T00:11:04.973-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]